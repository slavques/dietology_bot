from aiogram import types, Dispatcher, F
from ..keyboards import back_menu_kb

FAQ_TEXT = (
    "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n\n"
    "1. –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?\n"
    "- –¢—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å —Ñ–æ—Ç–æ –µ–¥—ã, –±–æ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç –±–ª—é–¥–æ –∏ —Å—á–∏—Ç–∞–µ—Ç –ö–ë–ñ–£ (–∫–∞–ª–æ—Ä–∏–∏, –±–µ–ª–∫–∏, –∂–∏—Ä—ã, —É–≥–ª–µ–≤–æ–¥—ã). \n"
    "–ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –Ω–∏–∑–∫–∞—è ‚Äî –ø–æ–ø—Ä–æ—à—É —É—Ç–æ—á–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é.\n\n"
    "2. –ê –µ—Å–ª–∏ –±–ª—é–¥–æ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ? \n"
    "- –Ø –ø–æ–ø—Ä–æ—à—É —Ç–µ–±—è –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ—Å—Ç–∞–≤ (–º–æ–∂–Ω–æ —Å –≤–µ—Å–æ–º). \n"
    "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–∞–º —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –ö–ë–ñ–£.\n\n"
    "3. –ú–æ–∂–Ω–æ –ª–∏ –≤–≤–æ–¥–∏—Ç—å –≤—Ä—É—á–Ω—É—é? \n"
    "- –î–∞! –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ ‚úèÔ∏è ¬´–£—Ç–æ—á–Ω–∏—Ç—å¬ª –∏ —É–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –≤–µ—Å ‚Äî –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø–æ—Å—á–∏—Ç–∞—é.\n\n"
    "4. –ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ —è –µ–ª?\n"
    "- –ù–∞–∂–º–∏ üìä ¬´–ú–æ–∏ –ø—Ä–∏—ë–º—ã¬ª –∏–ª–∏ üßæ ¬´–û—Ç—á—ë—Ç –∑–∞ –¥–µ–Ω—å¬ª, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å—ë –ø–æ –¥–Ω—è–º. \n\n"
    "5. –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –±–æ—Ç –æ—à–∏–±—Å—è?\n"
    "- –ù–∞–∂–º–∏ ‚úèÔ∏è ¬´–£—Ç–æ—á–Ω–∏—Ç—å¬ª –∏ –≤–≤–µ–¥–∏ –¥–∞–Ω–Ω—ã–µ —Å–∞–º. –ú—ã –Ω–µ –æ–±–∏–∂–∞–µ–º—Å—è :)\n\n"
    "6. –°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–∏ –¥–∞–Ω–Ω—ã–µ?  \n"
    "- –î–∞, –≤—Å—ë —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–±—è –∏ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ —Ç–≤–æ–µ–º—É Telegram. –ù–∏–∫–∞–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω—É–∂–Ω–æ.\n\n"
    "üì¨ –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º: @support_handle"
)

async def cmd_faq(message: types.Message):
    await message.answer(FAQ_TEXT, reply_markup=back_menu_kb())


def register(dp: Dispatcher):
    dp.message.register(cmd_faq, F.text == "‚ùì –ß–∞–í–û")
